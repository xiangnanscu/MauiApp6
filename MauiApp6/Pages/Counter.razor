@page "/counter"

<h1>Counter</h1>

<p role="status">Current counts: @currentCount</p>
<p role="status">选取文件名: @filename</p>

<button class="btn btn-primary" @onclick="ListPictures">列举</button>
<button class="btn btn-primary" @onclick="TakePhoto">拍照</button>
<button class="btn btn-primary" @onclick="IncrementCount">计数</button>

@code {
    private int currentCount = 0;
    private string filename = "";
    public async void ListPictures()
    {
#if ANDROID
    var files = MauiApp6.Platforms.Android.ListPictruresHelper.files_help();
    foreach (var item in files)
    {
        Console.WriteLine(item);
    }
#endif
    }
    private void IncrementCount()
    {
        currentCount++;
    }
    public async void TakePhoto()
    {
        if (MediaPicker.Default.IsCaptureSupported)
        {
            FileResult photo = await MediaPicker.Default.CapturePhotoAsync();

            if (photo != null)
            {
                // save the file into local storage
                string localFilePath = Path.Combine(FileSystem.CacheDirectory, photo.FileName);

                using Stream sourceStream = await photo.OpenReadAsync();
                using FileStream localFileStream = File.OpenWrite(localFilePath);

                await sourceStream.CopyToAsync(localFileStream);
            }
        }
    }

    public async void PickOptions()
    {
        var customFileType = new FilePickerFileType(
                new Dictionary<DevicePlatform, IEnumerable<string>>
                    {
                    { DevicePlatform.iOS, new[] { "public.my.comic.extension" } }, // or general UTType values
                    { DevicePlatform.Android, new[] { "application/comics" } },
                    { DevicePlatform.WinUI, new[] { ".cbr", ".cbz" } },
                    { DevicePlatform.Tizen, new[] { "*/*" } },
                    { DevicePlatform.macOS, new[] { "cbr", "cbz" } }, // or general UTType values
                    });

        PickOptions options = new()
            {
                PickerTitle = "Please select a comic file",
                // FileTypes = customFileType,
            };
        try
        {
            var result = await FilePicker.Default.PickAsync(options);
            if (result != null)
            {
                if (result.FileName.EndsWith("jpg", StringComparison.OrdinalIgnoreCase) ||
                    result.FileName.EndsWith("png", StringComparison.OrdinalIgnoreCase))
                {
                    // using var stream = await result.OpenReadAsync();
                    // var image = ImageSource.FromStream(() => stream);
                    filename = result.FullPath;

                }
            }

        }
        catch (Exception ex)
        {
            // The user canceled or something went wrong
        }

    }
}
